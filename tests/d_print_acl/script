test_description="decode and print Access Control Lists in debugfs"
if ! test -x $DEBUGFS_EXE; then
	echo "$test_name: $test_description: skipped (no debugfs)"
	return 0
fi

if ! setfacl --help > /dev/null 2>&1 ; then
	echo "$test_name: $test_description: skipped (no setfacl)"
	return 0
fi

MKFS_DIR=$(mktemp -d ./$test_name-XXXXXX.tmp)
OUT=$test_name.log
EXP=$test_dir/expect

mkdir $MKFS_DIR/acl_dir

setfacl --restore=- <<EOF
# file: $MKFS_DIR/acl_dir
user::rwx
group::r-x
group:42:r-x
mask::r-x
other::r-x
default:user::rwx
default:group::r-x
default:group:4:r-x
default:mask::r-x
default:other::r-x
EOF

if ! getfattr -d -m - $MKFS_DIR/acl_dir | grep -q posix_acl; then
	echo "$test_name: $test_description: skipped (no posix_acl xattrs)"
	rm -rf $MKFS_DIR
	return 0
fi

$MKE2FS -q -F -o Linux -T ext4 -b 1024 -d $MKFS_DIR $TMPFILE 16384 > $OUT.new 2>&1

$DEBUGFS -w -R "ea_list /acl_dir" $TMPFILE >> $OUT.new 2>&1
sed -f $cmd_dir/filter.sed $OUT.new > $OUT
rm -rf $MKFS_DIR $TMPFILE $OUT.new

cmp -s $OUT $EXP
status=$?

if [ "$status" = 0 ] ; then
	echo "$test_name: $test_description: ok"
	touch $test_name.ok
else
        echo "$test_name: $test_description: failed"
        diff $DIFF_OPTS $EXP $OUT > $test_name.failed
fi

unset MKFS_DIR OUT EXP
